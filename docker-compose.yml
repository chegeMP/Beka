version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pastry_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-pastry_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-lifeisgood}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-pastry_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pastry_network

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: pastry_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pastry_network

  # Flask Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pastry_app
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-lifeisgood}@db:5432/${DB_NAME:-pastry_db}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-False}
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5000:5000"
    volumes:
      - ./static/uploads:/app/static/uploads
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pastry_network

  # Database initialization service
  db_init:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pastry_db_init
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-lifeisgood}@db:5432/${DB_NAME:-pastry_db}
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "run_setup.py"]
    networks:
      - pastry_network
    profiles:
      - init

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: pastry_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - pastry_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  pastry_network:
    driver: bridge